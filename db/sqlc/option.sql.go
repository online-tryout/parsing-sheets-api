// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: option.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createOption = `-- name: CreateOption :one
INSERT INTO "options" (
        content,
        "questionId",
        "isTrue",
        "optionOrder"
    )
VALUES ($1, $2, $3, $4)
RETURNING id, "questionId", content, "isTrue", "optionOrder", "updatedAt", "createdAt"
`

type CreateOptionParams struct {
	Content     string        `json:"content"`
	QuestionId  uuid.UUID     `json:"questionId"`
	IsTrue      bool          `json:"isTrue"`
	OptionOrder sql.NullInt32 `json:"optionOrder"`
}

func (q *Queries) CreateOption(ctx context.Context, arg CreateOptionParams) (Options, error) {
	row := q.db.QueryRowContext(ctx, createOption,
		arg.Content,
		arg.QuestionId,
		arg.IsTrue,
		arg.OptionOrder,
	)
	var i Options
	err := row.Scan(
		&i.ID,
		&i.QuestionId,
		&i.Content,
		&i.IsTrue,
		&i.OptionOrder,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
