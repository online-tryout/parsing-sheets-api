// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: question.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createQuestion = `-- name: CreateQuestion :one
INSERT INTO "questions" (
        content,
        "moduleId",
        "questionOrder"
    )
VALUES ($1, $2, $3)
RETURNING id, content, "moduleId", "questionOrder", "updatedAt", "createdAt"
`

type CreateQuestionParams struct {
	Content       string        `json:"content"`
	ModuleId      uuid.UUID     `json:"moduleId"`
	QuestionOrder sql.NullInt32 `json:"questionOrder"`
}

func (q *Queries) CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Questions, error) {
	row := q.db.QueryRowContext(ctx, createQuestion, arg.Content, arg.ModuleId, arg.QuestionOrder)
	var i Questions
	err := row.Scan(
		&i.ID,
		&i.Content,
		&i.ModuleId,
		&i.QuestionOrder,
		&i.UpdatedAt,
		&i.CreatedAt,
	)
	return i, err
}
